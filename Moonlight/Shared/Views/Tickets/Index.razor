@page "/tickets"
@page "/ticket/{Id:int}"
@using Moonlight.App.Database.Entities
@using Moonlight.App.Events
@using Moonlight.App.Repositories
@using Moonlight.App.Services
@using Moonlight.App.Services.Files
@using Moonlight.App.Services.Tickets
@using Microsoft.EntityFrameworkCore
@using System.Text.RegularExpressions
@using Moonlight.App.Helpers

@inject TicketServerService TicketServerService
@inject TicketClientService TicketClientService
@inject SmartTranslateService SmartTranslateService
@inject Repository<SupportTicket> SupportTicket
@inject ResourceService ResourceService
@inject EventSystem Event

<div class="d-flex">
    <div class="flex-column flex-lg-row-auto w-100 w-lg-300px w-xl-400px mb-10 mb-lg-0">
        <div class="card card-flush">
            <div class="card-header pt-7">
                <form class="w-100 position-relative" autocomplete="off">
                    <i class="ki-outline ki-magnifier fs-3 text-gray-500 position-absolute top-50 ms-5 translate-middle-y"></i>
                    <input type="text" class="form-control form-control-solid px-13" name="search" value="" placeholder="Comming soon... #2055">
                </form>
            </div>
    
            <LazyLoader Load="Load">
                <div class="card-body pt-5">
                    <div class="separator separator-dashed d-none"></div>
                    <div class="card-body pt-5">
                        <div class="scroll-y me-n5 pe-5 h-200px h-lg-auto" data-kt-scroll="true" data-kt-scroll-activate="{default: false, lg: true}" data-kt-scroll-max-height="auto" data-kt-scroll-dependencies="#kt_header, #kt_app_header, #kt_toolbar, #kt_app_toolbar, #kt_footer, #kt_app_footer, #kt_chat_contacts_header" data-kt-scroll-wrappers="#kt_content, #kt_app_content, #kt_chat_contacts_body" data-kt-scroll-offset="5px" style="max-height: 613px;">
                            @if (OpenTickets.Any())
                            {
                                foreach (var ticket in OpenTickets)
                                {
                                <div class="separator separator-dashed d-none"></div>
                                    <div class="d-flex flex-stack py-4">
                                        <div class="d-flex align-items-center">
                                            <div class="symbol  symbol-45px symbol-circle ">
                                                <img alt="Avatar" src="@ResourceService.Avatar(ticket.Owner)">
                                            </div>
                                            <div class="ms-5">
                                                <a href="ticket/@ticket.Id" class="fs-5 fw-bold text-gray-900 text-hover-primary mb-2">@ticket.Title</a>
                                                <div class="fw-semibold text-muted">
                                                    @if (ticket.Messages.LastOrDefault() == null)
                                                    {
                                                        <TL>No message sent yet</TL>
                                                    }
                                                    else
                                                    {
                                                        var message = ticket.Messages.LastOrDefault();
                                                        if (message != null && message.User != null)
                                                        {
                                                            @message.User.FirstName
                                                            <a>&nbsp;</a>
                                                            @message.User.LastName
                                                            <a> - </a>
                                                            @message.Message
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="d-flex flex-column align-items-end ms-2">
                                            <span class="text-muted fs-7 mb-1">@ticket.UpdatedAt.Hour</span>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="d-flex flex-stack py-4">
                                    <div class="d-flex align-items-center">
                                        <a class="fs-5 fw-bold text-gray-900 mb-2">
                                            <TL>No support chat is currently open</TL>
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </LazyLoader>
        </div>
    </div>
    
    
    <div class="flex-lg-row-fluid ms-lg-7 ms-xl-10">
        <div class="card">
            <LazyLoader Load="LoadTicket" @ref="TicketLazyLoader">
                @if (Ticket != null)
                {
                    <div class="card-header">
                    <div class="card-title">
                        <div class="d-flex justify-content-center flex-column me-3">
                            <a class="fs-4 fw-bold text-gray-900 text-hover-primary me-1 mb-2 lh-1">@Ticket.Title</a>

                            <div class="mb-0 lh-1">
                                <span class="badge badge-success badge-circle w-10px h-10px me-1"></span>

                                <span class="fs-7 fw-semibold text-muted">Active</span>
                            </div>
                        </div>
                    </div>
                    <div class="card-toolbar">
                        <div class="me-n3">
                            <button class="btn btn-sm btn-icon btn-active-light-primary" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
                                <i class="ki-outline ki-dots-square fs-2"></i>
                            </button>
                            <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-800 menu-state-bg-light-primary fw-semibold w-200px py-3" data-kt-menu="true">
                                <div class="menu-item px-3" data-kt-menu-trigger="hover" data-kt-menu-placement="right-start">
                                    <a href="#" class="menu-link px-3">
                                        <span class="menu-title">Groups</span>
                                        <span class="menu-arrow"></span>
                                    </a>
                                    <div class="menu-sub menu-sub-dropdown w-175px py-4" style="">
                                        <div class="menu-item px-3">
                                            <a href="#" class="menu-link px-3" data-bs-toggle="tooltip" data-bs-original-title="Coming soon" data-kt-initialized="1">
                                                Create Group
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <div class="menu-item px-3 my-1">
                                    <a href="#" class="menu-link px-3" data-bs-toggle="tooltip" data-bs-original-title="Coming soon" data-kt-initialized="1">
                                        Settings
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                }
                else
                {
                    <div class="card-header">
                        <div class="card-title">
                            <div class="d-flex justify-content-center flex-column me-3">
                                <a class="fs-4 fw-bold text-gray-900 text-hover-primary me-1 mb-2 lh-1"><TL>No Ticket Found!</TL></a>
                            </div>
                        </div>
                    </div>
                }
            </LazyLoader>
                
            <LazyLoader Load="LoadTicketMessages" @ref="MessagesLazyLoader">
                @if (TicketMessages != null)
                {
                    if (TicketMessages.Owner.Id == User.Id)
                    {
                        <div class="card-body">
                            <div class="scroll-y me-n5 pe-5 h-300px h-lg-auto" data-kt-element="messages" data-kt-scroll="true" data-kt-scroll-activate="{default: false, lg: true}" data-kt-scroll-max-height="auto" data-kt-scroll-dependencies="#kt_header, #kt_app_header, #kt_app_toolbar, #kt_toolbar, #kt_footer, #kt_app_footer, #kt_chat_messenger_header, #kt_chat_messenger_footer" data-kt-scroll-wrappers="#kt_content, #kt_app_content, #kt_chat_messenger_body" data-kt-scroll-offset="5px" style="max-height: 465px;">
                                @foreach (var message in TicketMessages.Messages)
                                {
                                    if (message.User.Id == User.Id)
                                    {
                                        <div class="d-flex justify-content-end mb-10 ">
                                            <div class="d-flex flex-column align-items-end">
                                                <div class="d-flex align-items-center mb-2">
                                                    <div class="me-3">
                                                        <span class="text-muted fs-7 mb-1">@(Formatter.FormatAgoFromDateTime(message.CreatedAt))</span>
                                                        <a class="fs-5 fw-bold text-gray-900 text-hover-primary ms-1">@(message.User.FirstName + " " + message.User.LastName)</a>
                                                    </div>
                                                    <div class="symbol  symbol-35px symbol-circle ">
                                                        <img alt="Avatar" src="@ResourceService.Avatar(message.User)">
                                                    </div>
                                                </div>
                                                <div class="p-5 rounded bg-light-primary text-dark fw-semibold mw-lg-400px text-end">
                                                    @{
                                                            int i = 0;
                                                            var arr = message.Message.Split("\n", StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);}
                                                        @foreach (var line in arr)
                                                        {
                                                            @line
                                                            if (i++ != arr.Length - 1)
                                                            {
                                                                <br />
                                                            }
                                                        }
                                                        
                                                        @if (message.Attachment != "")
                                                        {
                                                            <div class="mt-3">
                                                                @if (Regex.IsMatch(message.Attachment, @"\.(jpg|jpeg|png|gif|bmp)$"))
                                                                {
                                                                    <img src="@(ResourceService.BucketItem("supportChat", message.Attachment))" class="img-fluid" alt="Attachment"/>
                                                                }
                                                                else
                                                                {
                                                                    <a class="btn btn-secondary" href="@(ResourceService.BucketItem("supportChat", message.Attachment))">
                                                                        <i class="me-2 bx bx-download"></i> @(message.Attachment)
                                                                    </a>
                                                                }
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="d-flex justify-content-start mb-10 ">
                                            <div class="d-flex flex-column align-items-start">
                                                <div class="d-flex align-items-center mb-2">
                                                    <div class="symbol  symbol-35px symbol-circle ">
                                                        <img alt="Avatar" src="@ResourceService.Avatar(message.User)">
                                                    </div>
                                                    <div class="ms-3">
                                                        <a class="fs-5 fw-bold text-gray-900 text-hover-primary me-1">@(Formatter.FormatAgoFromDateTime(message.CreatedAt))</a>
                                                        <span class="text-muted fs-7 mb-1">@(message.User.FirstName + " " + message.User.LastName)</span>
                                                    </div>
                                                </div>
                                                <div class="p-5 rounded bg-light-info text-dark fw-semibold mw-lg-400px text-start">
                                                    @{ 
                                                            int i = 0;
                                                            var arr = message.Message.Split("\n", StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);}
                                                        @foreach (var line in arr)
                                                        {
                                                            @line
                                                            if (i++ != arr.Length - 1)
                                                            {
                                                                <br />
                                                            }
                                                        }
                                                        
                                                        @if (message.Attachment != "")
                                                        {
                                                            <div class="mt-3">
                                                                @if (Regex.IsMatch(message.Attachment, @"\.(jpg|jpeg|png|gif|bmp)$"))
                                                                {
                                                                    <img src="@(ResourceService.BucketItem("supportTicket", message.Attachment))" class="img-fluid" alt="Attachment"/>
                                                                }
                                                                else
                                                                {
                                                                    <a class="btn btn-secondary" href="@(ResourceService.BucketItem("supportTicket", message.Attachment))">
                                                                        <i class="me-2 bx bx-download"></i> @(message.Attachment)
                                                                    </a>
                                                                }
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        //Not Authorised
                    }
                }
                else
                {
                    <h4 class="fw-semibold">
                        <TL>Ticket not found</TL>
                    </h4>
                }
            </LazyLoader>
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public int Id { get; set; }

    [CascadingParameter]
    public User User { get; set; }

    private SupportTicket? Ticket;
    private SupportTicket? TicketMessages;
    private List<SupportTicket> OpenTickets = new();

    private LazyLoader TicketLazyLoader;
    private LazyLoader MessagesLazyLoader;

    protected override async Task OnInitializedAsync()
    {
        await Event.On<User>("SupportTicket.new", this, async user =>
        {
            OpenTickets = await TicketServerService.GetOpenTickets(user);

            await InvokeAsync(StateHasChanged);
        });
    }

    private async Task Load(LazyLoader arg)
    {
        OpenTickets = await TicketServerService.GetOpenTickets(User);
    }

    private Task LoadTicket(LazyLoader arg)
    {
        if (Id != 0)
        {
            Ticket = OpenTickets.FirstOrDefault(x => x.Id == Id);
        }

        return Task.CompletedTask;
    }

    private Task LoadTicketMessages(LazyLoader arg)
    {
        TicketMessages = SupportTicket.Get()
            .Include(x => x.Messages)
            .FirstOrDefault(x => x.Id == Id);
        
        return Task.CompletedTask;
    }

    public async void Dispose()
    {
        await Event.Off("SupportTicket.new", this);
    }
}