@page "/tickets"
@using Moonlight.App.Database.Entities
@using Moonlight.App.Events
@using Moonlight.App.Services
@using Moonlight.App.Services.Tickets

@inject TicketServerService TicketServerService
@inject SmartTranslateService SmartTranslateService
@inject EventSystem Event

<LazyLoader @ref="LazyLoader" Load="Load">
    <div class="card">
        <div class="card-body">
            <div class="d-flex flex-column flex-xl-row p-5 pb-0">
                <div class="flex-lg-row-fluid me-xl-15 mb-20 mb-xl-0">
                    <div class="mb-0">
                        <div class="card-header border-0 pt-5">
                            <h3 class="card-title align-items-start flex-column">
                                <span class="card-label fw-bold fs-3 mb-1"><TL>Tickets</TL></span>
                            </h3>
                            <div class="card-toolbar">
                                <a href="/tickets/new" class="btn btn-sm btn-light-success">
                                    <i class="bx bx-layer-plus"></i>
                                    <TL>New server</TL>
                                </a>
                            </div>
                        </div>
                        
                        <div class="separator"></div>
                        <div class="mb-5">
                            @if (OpenTickets.Any())
                            {
                                foreach (var ticket in OpenTickets)
                                {
                                    <div class="d-flex mt-3 mb-3 ms-2 me-2">
                                        <table>
                                            <tr>
                                                <td rowspan="2">
                                                    <span class="svg-icon svg-icon-2x me-5 ms-n1 svg-icon-success">
                                                        <i class="text-primary bx bx-md bx-message-dots"></i>
                                                    </span>
                                                </td>
                                                <td>
                                                    <a href="/admin/tickets/view/@(ticket.Key.Id)" class="text-dark text-hover-primary fs-4 me-3 fw-semibold">
                                                        @(ticket.Key.Owner.FirstName) @(ticket.Key.Owner.LastName)
                                                    </a>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <span class="text-muted fw-semibold fs-6">
                                                        @if (ticket.Value == null)
                                                        {
                                                            <TL>No message sent yet</TL>
                                                        }
                                                        else
                                                        {
                                                            @(ticket.Value.Message)
                                                        }
                                                    </span>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>
                                    <div class="separator"></div>
                                }
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    <TL>No support chat is currently open</TL>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</LazyLoader>

@code
{
    [CascadingParameter]
    public User User { get; set; }

    private LazyLoader? LazyLoader;
    private Dictionary<SupportTicket, SupportTicketMessage?> OpenTickets = new();

    protected override async Task OnInitializedAsync()
    {
        await Event.On<User>("supportChat.new", this, async user =>
        {
            OpenTickets = await TicketServerService.GetOpenTickets();

            await InvokeAsync(StateHasChanged);
        });
    }

    private async Task Load(LazyLoader arg)
    {
        OpenTickets = await TicketServerService.GetOpenTickets();
    }

    public async void Dispose()
    {
        await Event.Off("supportChat.new", this);
    }
}