@page "/admin/tickets"
@using Moonlight.App.Database.Entities
@using Moonlight.App.Events
@using Moonlight.App.Services.SupportChat

@inject SupportChatServerService ServerService
@inject EventSystem Event

@implements IDisposable

<OnlyAdmin>
    <LazyLoader @ref="LazyLoader" Load="Load">
        <div class="card">
            <div class="card-body">
                <div class="d-flex flex-column flex-xl-row p-5 pb-0">
                    <div class="flex-lg-row-fluid me-xl-15 mb-20 mb-xl-0">
                        <div class="mb-0">
                            <h1 class="text-dark mb-6">
                                <TL>Open chats</TL>
                            </h1>
                            <div class="separator"></div>
                            <div class="mb-5">
                                @if (OpenChats.Any())
                                {
                                    foreach (var chat in OpenChats)
                                    {
                                        <div class="d-flex mt-3 mb-3 ms-2 me-2">
                                            <table>
                                                <tr>
                                                    <td rowspan="2">
                                                        <span class="svg-icon svg-icon-2x me-5 ms-n1 svg-icon-success">
                                                            <i class="text-primary bx bx-md bx-message-dots"></i>
                                                        </span>
                                                    </td>
                                                    <td>
                                                        <a href="/admin/support/view/@(chat.Key.Id)" class="text-dark text-hover-primary fs-4 me-3 fw-semibold">
                                                            @(chat.Key.FirstName) @(chat.Key.LastName)
                                                        </a>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        <span class="text-muted fw-semibold fs-6">
                                                            @if (chat.Value == null)
                                                            {
                                                                <TL>No message sent yet</TL>
                                                            }
                                                            else
                                                            {
                                                                @(chat.Value.Content)
                                                            }
                                                        </span>
                                                    </td>
                                                </tr>
                                            </table>
                                        </div>
                                        <div class="separator"></div>
                                    }
                                }
                                else
                                {
                                    <div class="alert alert-info">
                                        <TL>No support chat is currently open</TL>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </LazyLoader>
</OnlyAdmin>

<div class="d-flex align-items-center gap-2 gap-lg-3" data-select2-id="select2-data-123-r9h1">
				<div class="m-0" data-select2-id="select2-data-122-7c1n">
					<a href="#" class="btn btn-sm btn-flex bg-body btn-color-gray-700 btn-active-color-primary fw-bold" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end">
					<i class="ki-outline ki-filter fs-6 text-muted me-1"></i>               
					Filter
					</a>
					<div class="menu menu-sub menu-sub-dropdown w-250px w-md-300px" data-kt-menu="true" id="kt_menu_648f5f52efaea" style="" data-select2-id="select2-data-kt_menu_648f5f52efaea">
						<div class="px-7 py-5">
							<div class="fs-5 text-dark fw-bold">Filter Options</div>
						</div>
						<div class="separator border-gray-200"></div>
						<div class="px-7 py-5" data-select2-id="select2-data-121-9o8t">
							<div class="mb-10" data-select2-id="select2-data-120-7t2s">
								<label class="form-label fw-semibold">Status:</label>
								<div data-select2-id="select2-data-119-78r6">
									<select class="form-select form-select-solid select2-hidden-accessible" data-kt-select2="true" data-placeholder="Select option" data-dropdown-parent="#kt_menu_648f5f52efaea" data-allow-clear="true" data-select2-id="select2-data-7-x3yc" tabindex="-1" aria-hidden="true" data-kt-initialized="1">
										<option data-select2-id="select2-data-9-f68g"></option>
										<option value="1" data-select2-id="select2-data-124-efv7">Approved</option>
										<option value="2" data-select2-id="select2-data-125-evrj">Pending</option>
										<option value="2" data-select2-id="select2-data-126-ztta">In Process</option>
										<option value="2" data-select2-id="select2-data-127-a0qx">Rejected</option>
									</select>
									<span class="select2 select2-container select2-container--bootstrap5 select2-container--below" dir="ltr" data-select2-id="select2-data-8-fkyz" style="width: 100%;"><span class="selection"><span class="select2-selection select2-selection--single form-select form-select-solid" role="combobox" aria-haspopup="true" aria-expanded="false" tabindex="0" aria-disabled="false" aria-labelledby="select2-knqi-container" aria-controls="select2-knqi-container"><span class="select2-selection__rendered" id="select2-knqi-container" role="textbox" aria-readonly="true" title="Select option"><span class="select2-selection__placeholder">Select option</span></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span></span></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>
								</div>
							</div>
							<div class="mb-10">
								<label class="form-label fw-semibold">Member Type:</label>
								<div class="d-flex">
									<label class="form-check form-check-sm form-check-custom form-check-solid me-5">
									<input class="form-check-input" type="checkbox" value="1">
									<span class="form-check-label">
									Author
									</span>
									</label>
									<label class="form-check form-check-sm form-check-custom form-check-solid">
									<input class="form-check-input" type="checkbox" value="2" checked="checked">
									<span class="form-check-label">
									Customer
									</span>
									</label>
								</div>
							</div>
							<div class="d-flex justify-content-end">
								<button type="reset" class="btn btn-sm btn-light btn-active-light-primary me-2" data-kt-menu-dismiss="true">Reset</button>
								<button type="submit" class="btn btn-sm btn-primary" data-kt-menu-dismiss="true">Apply</button>
							</div>
						</div>
					</div>
				</div>
				<a href="#" class="btn btn-sm fw-bold btn-primary" data-bs-toggle="modal" data-bs-target="#kt_modal_create_app">
				Create        </a>
			</div>

@code
{
    private LazyLoader? LazyLoader;
    private Dictionary<User, SupportChatMessage?> OpenChats = new();

    protected override async Task OnInitializedAsync()
    {
        await Event.On<User>("supportChat.new", this, async user =>
        {
            //TODO: Play sound or smth. Add a config option

            OpenChats = await ServerService.GetOpenChats();

            await InvokeAsync(StateHasChanged);
        });
    }

    private async Task Load(LazyLoader arg) // Only for initial load
    {
        OpenChats = await ServerService.GetOpenChats();
    }

    public async void Dispose()
    {
        await Event.Off("supportChat.new", this);
    }
}