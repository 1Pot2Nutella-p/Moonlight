@page "/admin/sharding/view/{Id:int}/shards"
@using Moonlight.App.Repositories
@using Moonlight.App.Database.Entities
@using Microsoft.EntityFrameworkCore
@using Moonlight.Shared.Components.Navigations
@using BlazorTable
@using Moonlight.App.Services

@inject Repository<ShardSpace> ShardSpaceRepository
@inject Repository<Shard> ShardRepository
@inject SmartTranslateService SmartTranslateService

<OnlyAdmin>
    <LazyLoader Load="Load">
        <AdminShardingNavigation Index="2" ShardSpace="ShardSpace"/>
        @if (ShardSpace == null)
        {
            <div class="alert alert-danger">
                <TL>No shard space with this id found</TL>
            </div>
        }
        else
        {
            <div class="card">
                <div class="card-header border-0 pt-5">
                    <h3 class="card-title align-items-start flex-column">
                        <span class="card-label fw-bold fs-3 mb-1">
                            <TL>Shards</TL>
                        </span>
                    </h3>
                    <div class="card-toolbar">
                        <a href="/admin/sharding/view/@(ShardSpace.Id)/shards/new" class="btn btn-sm btn-light-success">
                            <i class="bx bx-layer-plus"></i>
                            <TL>New shard</TL>
                        </a>
                    </div>
                </div>
                <div class="card-body pt-0">
                    @if (ShardSpace.Shards.Any())
                    {
                        <div class="table-responsive">
                            <Table TableItem="Shard" Items="ShardSpace.Shards" PageSize="25" TableClass="table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3" TableHeadClass="fw-bold text-muted">
                                <Column TableItem="Shard" Title="@(SmartTranslateService.Translate("Id"))" Field="@(x => x.Id)" Sortable="true" Filterable="true"/>
                                <Column TableItem="Shard" Title="@(SmartTranslateService.Translate("Name"))" Field="@(x => x.Name)" Sortable="true" Filterable="true">
                                    <Template>
                                        <a href="/admin/sharding/view/@(ShardSpace.Id)/shards/view/@(context.Id)">@(context.Name)</a>
                                    </Template>
                                </Column>
                                <Column TableItem="Shard" Title="" Field="@(x => x.Id)" Sortable="false" Filterable="false">
                                    <Template>
                                        <DeleteButton Confirm="true"
                                                      OnClick="() => Delete(context)">
                                        </DeleteButton>
                                    </Template>
                                </Column>
                                <Pager ShowPageNumber="true" ShowTotalCount="true"/>
                            </Table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <TL>No shards found</TL>
                        </div>
                    }
                </div>
            </div>
        }
    </LazyLoader>
</OnlyAdmin>

@code
{
    [Parameter]
    public int Id { get; set; }

    private ShardSpace? ShardSpace;

    private Task Load(LazyLoader arg)
    {
        ShardSpace = ShardSpaceRepository
            .Get()
            .Include(x => x.Proxy)
            .Include(x => x.Shards)
            .FirstOrDefault(x => x.Id == Id);

        return Task.CompletedTask;
    }

    private async Task Delete(Shard context)
    {
        ShardSpace!.Shards.Remove(context);
        ShardSpaceRepository.Update(ShardSpace);
        ShardRepository.Delete(context);

        await InvokeAsync(StateHasChanged);
    }
}