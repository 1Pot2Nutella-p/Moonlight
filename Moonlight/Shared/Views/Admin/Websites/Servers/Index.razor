@page "/admin/websites/servers"

@using Moonlight.Shared.Components.Navigations
@using Moonlight.App.Services
@using Moonlight.App.Repositories
@using Moonlight.App.Database.Entities
@using BlazorTable

@inject SmartTranslateService SmartTranslateService
@inject PleskServerRepository PleskServerRepository
@inject WebsiteService WebsiteService

<OnlyAdmin>
    <AdminWebsitesNavigation Index="1"/>

    <div class="card">
        <div class="card-header border-0 pt-5">
            <h3 class="card-title align-items-start flex-column">
                <span class="card-label fw-bold fs-3 mb-1">
                    <TL>Plesk servers</TL>
                </span>
            </h3>
            <div class="card-toolbar">
                <a href="/admin/websites/servers/new" class="btn btn-sm btn-light-success">
                    <i class="bx bx-user-plus"></i>
                    <TL>New plesk server</TL>
                </a>
            </div>
        </div>
        <div class="card-body">
            <LazyLoader @ref="LazyLoader" Load="Load">
                <div class="table-responsive">
                    <Table TableItem="PleskServer" Items="PleskServers" PageSize="25" TableClass="table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3" TableHeadClass="fw-bold text-muted">
                        <Column TableItem="PleskServer" Title="@(SmartTranslateService.Translate("Id"))" Field="@(x => x.Id)" Sortable="true" Filterable="true"/>
                        <Column TableItem="PleskServer" Title="@(SmartTranslateService.Translate("Name"))" Field="@(x => x.Name)" Sortable="true" Filterable="true"/>
                        <Column TableItem="PleskServer" Title="@(SmartTranslateService.Translate("Api url"))" Field="@(x => x.ApiUrl)" Sortable="true" Filterable="true"/>
                        <Column TableItem="PleskServer" Title="@(SmartTranslateService.Translate("Status"))" Field="@(x => x.Id)" Sortable="false" Filterable="false">
                            <Template>
                                @if (OnlineCache.ContainsKey(context))
                                {
                                    if (OnlineCache[context])
                                    {
                                        <span class="text-success">
                                            <TL>Online</TL>
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-danger">
                                            <TL>Offline</TL>
                                        </span>
                                    }
                                }
                                else
                                {
                                    <span class="text-muted">
                                        <TL>Loading</TL>
                                    </span>
                                }
                            </Template>
                        </Column>
                        <Column TableItem="PleskServer" Title="@(SmartTranslateService.Translate("Edit"))" Field="@(x => x.Id)" Sortable="false" Filterable="false">
                            <Template>
                                <a href="/admin/websites/servers/edit/@(context.Id)/">
                                    <TL>Manage</TL>
                                </a>
                            </Template>
                        </Column>
                        <Column TableItem="PleskServer" Title="@(SmartTranslateService.Translate("Manage"))" Field="@(x => x.Id)" Sortable="false" Filterable="false">
                            <Template>
                                <DeleteButton Confirm="true" OnClick="() => OnClick(context)">
                                </DeleteButton>
                            </Template>
                        </Column>
                        <Pager ShowPageNumber="true" ShowTotalCount="true"/>
                    </Table>
                </div>
            </LazyLoader>
        </div>
    </div>
</OnlyAdmin>

@code
{
    private PleskServer[] PleskServers;

    private LazyLoader LazyLoader;
    private Dictionary<PleskServer, bool> OnlineCache = new();

    private Task Load(LazyLoader arg)
    {
        PleskServers = PleskServerRepository
            .Get()
            .ToArray();

        Task.Run(async () =>
        {
            foreach (var pleskServer in PleskServers)
            {
                OnlineCache.Add(pleskServer, await WebsiteService.IsHostUp(pleskServer));

                await InvokeAsync(StateHasChanged);
            }
        });

        return Task.CompletedTask;
    }

    private async Task OnClick(PleskServer pleskServer)
    {
        PleskServerRepository.Delete(pleskServer);

        await LazyLoader.Reload();
    }
}